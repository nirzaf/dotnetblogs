name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Add permissions to allow the workflow to push changes
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history for all branches and tags
          token: ${{ github.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        id: install
        run: |
          if [[ ! -f package-lock.json && ! -f yarn.lock && ! -f npm-shrinkwrap.json ]]; then
            echo "Error: No dependency lock file found (package-lock.json, yarn.lock, or npm-shrinkwrap.json)."
            echo "Please commit a lock file to the repository."
            exit 1
          fi
          
          echo "Attempting a clean install of dependencies..."
          rm -rf node_modules
          npm ci || (
            echo "npm ci failed. Falling back to npm install..."
            rm -rf node_modules package-lock.json
            npm install
          )
          echo "package_lock_updated=true" >> $GITHUB_OUTPUT

      # Commit updated package-lock.json if it was changed
      - name: Commit package-lock.json if updated
        if: steps.install.outputs.package_lock_updated == 'true' && github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add package-lock.json
          git commit -m "chore: update package-lock.json to match package.json"
          git push

      - name: TypeScript Check
        run: |
          echo "Checking main TypeScript configuration..."
          npx tsc --noEmit

          echo "Checking Cypress TypeScript configuration..."
          npx tsc --project cypress/tsconfig.json --noEmit

      - name: Build
        run: npm run build

      - name: Run tests
        run: |
          echo "Starting the Next.js server in the background..."
          npm run build
          npm run start &
          sleep 10  # Give the server time to start

          echo "Running Cypress tests..."
          npm test

          echo "Stopping the Next.js server..."
          kill $(lsof -t -i:3000) || true
